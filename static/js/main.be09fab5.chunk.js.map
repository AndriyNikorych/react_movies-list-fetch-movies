{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","imdbRating","MoviesList","movies","map","imdbID","getMovie","title","a","fetch","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setMovie","request","setRequest","isValid","setValid","loadMovie","movieFromApi","Response","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","disabled","onClick","App","setMovies","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,uBACA,uBACA,iCAAS,iBACRN,EAAMO,WACP,iCCjCGC,EAA8B,SAACT,GAC1C,IAAQU,EAAWV,EAAXU,OAER,OACE,qBAAKR,UAAU,SAAf,SACGQ,EAAOC,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMW,c,uBCbRC,G,MAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACCC,MAAM,GAAD,OAHd,2CAGc,cAAiBF,IADvB,WAChBG,EADgB,QAGRC,GAHQ,sBAId,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAJ7B,gCAOfJ,EAASK,QAPM,2CAAH,uDCQRC,EAA6B,SAACvB,GACzC,IAAQwB,EAAaxB,EAAbwB,SACR,EAA0BC,mBAAuB,MAAjD,mBAAOxB,EAAP,KAAcyB,EAAd,KACA,EAA8BD,mBAAiB,IAA/C,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA4BH,oBAAkB,GAA9C,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAAS,uCAAG,4BAAAhB,EAAA,sEACWF,EAASc,GADpB,UAGc,WAFxBK,EADU,QAGCC,SAHD,uBAIdP,EAAS,MACTI,GAAS,GALK,0BAUhBJ,EAASM,GACTF,GAAS,GAXO,2CAAH,qDAyBf,OACE,qCACE,uBACE5B,UAAU,aACVgC,SAXc,SAACC,GACnBA,EAAMC,iBAENL,IACAH,EAAW,KAKT,UAIE,sBAAK1B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQmC,QAAQ,cAAjC,yBAIA,qBAAKnC,UAAU,UAAf,SACE,uBACEoC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZtC,UAAU,kBACVuC,MAAOd,EACPe,SA7BS,SAACP,GACpBP,EAAWO,EAAMQ,OAAOF,aAgChBZ,GACA,mBAAG3B,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,kBAFZ,4BAQF,qBAAKA,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,oBACV0C,UAAW3C,EACX4C,QAAS,WACPrB,EAASvB,GACTyB,EAAS,OANb,qCAeLzB,GACC,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,WC9FzB6C,EAAgB,WAC3B,MAA4BrB,mBAAkB,IAA9C,mBAAOf,EAAP,KAAeqC,EAAf,KAUA,OACE,sBAAK7C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYQ,OAAQA,MAEtB,qBAAKR,UAAU,UAAf,SACE,cAAC,EAAD,CAAWsB,SAdA,SAACwB,GACAtC,EAAOuC,MAAK,SAAAhD,GAAK,OAAIA,EAAMW,SAAWoC,EAASpC,WAG7DmC,EAAU,GAAD,mBAAKrC,GAAL,CAAasC,cCR5BE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.be09fab5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n          <br />\n          <strong>{'imdbRating: '}</strong>\n          {movie.imdbRating}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=b2947ed2';\n\nexport const getMovie = async (title: string) => {\n  const response = await fetch(`${API_URL}&t=${title}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [request, setRequest] = useState<string>('');\n  const [isValid, setValid] = useState<boolean>(true);\n\n  const loadMovie = async () => {\n    const movieFromApi = await getMovie(request);\n\n    if (movieFromApi.Response === 'False') {\n      setMovie(null);\n      setValid(false);\n\n      return;\n    }\n\n    setMovie(movieFromApi);\n    setValid(true);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRequest(event.target.value);\n  };\n\n  const hanleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    loadMovie();\n    setRequest('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={hanleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={request}\n              onChange={handleChange}\n            />\n          </div>\n\n          {!isValid && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={() => {\n                addMovie(movie as Movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          {movie && <MovieCard movie={movie} />}\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const isMovie = movies.find(movie => movie.imdbID === newMovie.imdbID);\n\n    if (!isMovie) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}